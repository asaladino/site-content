#!/usr/bin/env node

const extractor = require('unfluff');
const commandLineArgs = require('command-line-args');
const getUsage = require('command-line-usage');

const OptionsRepository = require('./src/Repository/OptionsRepository');
const UrlsRepository = require('./src/Repository/UrlsRepository');
const HtmlRepository = require('./src/Repository/HtmlRepository');
const ContentRepository = require('./src/Repository/ContentRepository');

const menu = require('./src/Model/Menu');
const Args = require('./src/Model/Args');

const ProgressUtility = require('./src/Utility/ProgressUtility');

let args = new Args(commandLineArgs(menu[1]['optionList']));

if (args.shouldShowHelp()) {
    console.log(getUsage(menu));
} else {
    // Load the option.
    let optionsRepository = new OptionsRepository(args);
    let option = optionsRepository.getOption();

    // Load the urls to test.
    let urlsRepository = new UrlsRepository(option, args);
    let urls = urlsRepository.findForRange();

    let htmlRepository = new HtmlRepository(args.getProjectPath());
    let contentRepository = new ContentRepository(args.getProjectPath());
    urls.forEach(url => {
        const html = htmlRepository.read(url);
        let data = extractor(html);
        contentRepository.save(url, data).then(() => console.log('saved: ' + url.name));
    });
}