{"version":3,"sources":["../../src/Repository/SqliteCrawlStatesRepository.js"],"names":["SqliteCrawlStatesRepository","constructor","projectFolder","projectsPathUrls","databaseFile","db","Database","updateUrlsStmt","prepare","update","name","title","contents","run"],"mappings":";;;;;;;AACA;;AACA;;;;AAEA;;;AAGe,MAAMA,2BAAN,CAAkC;AAK7CC,EAAAA,WAAW,CAACC,aAAD,EAAwB;AAC/B,QAAIC,gBAAgB,GAAG,gBAAKD,aAAL,EAAoB,MAApB,CAAvB;AACA,SAAKE,YAAL,GAAoB,gBAAKD,gBAAL,EAAuB,oBAAvB,CAApB;AACA,SAAKE,EAAL,GAAU,IAAIC,qBAAJ,CAAa,KAAKF,YAAlB,EAAgC,EAAhC,CAAV;AAEA,SAAKG,cAAL,GAAsB,KAAKF,EAAL,CAAQG,OAAR,CAAgB,kDAAhB,CAAtB;AACH;AAED;;;;;AAGAC,EAAAA,MAAM,CAACC,IAAD,EAAeC,KAAf,EAA8BC,QAA9B,EAAgD;AAClD,SAAKL,cAAL,CAAoBM,GAApB,CAAwB,CAACF,KAAD,EAAQC,QAAR,EAAkBF,IAAlB,CAAxB;AACH;;AAlB4C","sourcesContent":["// @flow\nimport {join} from \"path\";\nimport Database from \"better-sqlite3\";\n\n/**\n * Read and write the current crawl state to file.\n */\nexport default class SqliteCrawlStatesRepository {\n    databaseFile: string;\n    db: Database;\n    updateUrlsStmt: any;\n\n    constructor(projectFolder: string) {\n        let projectsPathUrls = join(projectFolder, \"urls\");\n        this.databaseFile = join(projectsPathUrls, \"crawl_state.sqlite\");\n        this.db = new Database(this.databaseFile, {});\n\n        this.updateUrlsStmt = this.db.prepare(\"UPDATE urls SET title=?, contents=? WHERE name=?\");\n    }\n\n    /**\n     * Update a url with content and title.\n     */\n    update(name: string, title: string, contents: string) {\n        this.updateUrlsStmt.run([title, contents, name]);\n    }\n}\n"],"file":"SqliteCrawlStatesRepository.js"}