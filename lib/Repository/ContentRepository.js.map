{"version":3,"sources":["../../src/Repository/ContentRepository.js"],"names":["ContentRepository","constructor","projectFolder","save","url","content","file","getProjectsContentFolder","name","Promise","resolve","reject","JSON","stringify","error","projectsPathHtml"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAEA;;;AAGe,MAAMA,iBAAN,CAAwB;AACnC;;;;AAKA;;;AAGAC,EAAAA,WAAW,CAACC,aAAD,EAAwB;AAC/B,SAAKA,aAAL,GAAqBA,aAArB;AACH;AAED;;;;;;;AAKAC,EAAAA,IAAI,CAACC,GAAD,EAAWC,OAAX,EAAwC;AACxC,QAAMC,IAAI,GAAG,gBAAK,KAAKC,wBAAL,EAAL,EAAsCH,GAAG,CAACI,IAAJ,GAAW,OAAjD,CAAb;AACA,WAAO,IAAIC,OAAJ,CAAkB,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC1C,6BAAcL,IAAd,EAAoBM,IAAI,CAACC,SAAL,CAAeR,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAApB,EAAsD,UAAUS,KAAV,EAAiB;AACnEH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACH,OAFD;AAGAJ,MAAAA,OAAO;AACV,KALM,CAAP;AAMH;AAED;;;;;AAGAH,EAAAA,wBAAwB,GAAW;AAC/B,QAAIQ,gBAAgB,GAAG,gBAAK,KAAKb,aAAV,EAAyB,SAAzB,CAAvB;;AACA,QAAI,CAAC,oBAAWa,gBAAX,CAAL,EAAmC;AAC/B,yBAAUA,gBAAV;AACH;;AACD,WAAOA,gBAAP;AACH;;AArCkC","sourcesContent":["// @flow\nimport {writeFileSync, existsSync, mkdirSync} from \"fs\";\nimport Url from \"../Model/Url\";\nimport {join} from \"path\";\n\n/**\n * Save the url html to file.\n */\nexport default class ContentRepository {\n    /**\n     * Location to the html folder in the project.\n     */\n    projectFolder: string;\n\n    /**\n     * Build a json url repository.\n     */\n    constructor(projectFolder: string) {\n        this.projectFolder = projectFolder;\n    }\n\n    /**\n     * Save json to a file.\n     * @param url {Url}\n     * @param content {*}\n     */\n    save(url: Url, content: any): Promise<void> {\n        const file = join(this.getProjectsContentFolder(), url.name + \".json\");\n        return new Promise<void>((resolve, reject) => {\n            writeFileSync(file, JSON.stringify(content, null, 2), function (error) {\n                reject(error);\n            });\n            resolve();\n        });\n    }\n\n    /**\n     * Creates the html folder in the project if it doesn't exist.\n     */\n    getProjectsContentFolder(): string {\n        let projectsPathHtml = join(this.projectFolder, \"content\");\n        if (!existsSync(projectsPathHtml)) {\n            mkdirSync(projectsPathHtml);\n        }\n        return projectsPathHtml;\n    }\n}\n"],"file":"ContentRepository.js"}