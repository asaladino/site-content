{"version":3,"sources":["../../src/Model/Progress.js"],"names":["Progress","constructor","url","total","progress","toString","message","hasUrl","toLog","update"],"mappings":";;;;;;;AACA;;;;AAQA;;;AAGe,MAAMA,QAAN,CAAe;AAC1B;;;;AAIA;;;;AAIA;;;;AAKA;;;;;AAKAC,EAAAA,WAAW,GAAsC;AAAA,QAArCC,GAAqC,uEAAzB,IAAyB;AAAA,QAAnBC,KAAmB,uEAAH,CAAG;AAC7C,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACH;AAED;;;;;AAGAC,EAAAA,QAAQ,GAAW;AACf,QAAMC,OAAO,GAAG,KAAKJ,GAAL,IAAY,IAAZ,GAAmB,KAAKA,GAAL,CAASA,GAA5B,GAAkC,EAAlD;AACA,qBAAU,KAAKC,KAAf,gBAA0B,KAAKC,QAA/B,6BAA0DE,OAA1D;AACH;AAED;;;;;AAGAC,EAAAA,MAAM,GAAY;AACd,WAAO,KAAKL,GAAL,IAAY,IAAnB;AACH;AAED;;;;;AAGAM,EAAAA,KAAK,GAAgB;AACjB,WAAO;AACHL,MAAAA,KAAK,EAAE,KAAKA,KADT;AAEHC,MAAAA,QAAQ,EAAE,KAAKA,QAFZ;AAGHF,MAAAA,GAAG,EAAE,KAAKA,GAAL,IAAY,IAAZ,GAAmB,KAAKA,GAAL,CAASA,GAA5B,GAAkC;AAHpC,KAAP;AAKH;AAED;;;;;;AAIAO,EAAAA,MAAM,CAACP,GAAD,EAAY;AACd,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKE,QAAL;AACH;;AA1DyB","sourcesContent":["// @flow\nimport Url from \"./Url\";\n\ntype ProgressLog = {\n    total: number,\n    progress: number,\n    url: string\n};\n\n/**\n * Class for reporting the progress.\n */\nexport default class Progress {\n    /**\n     * Current url\n     */\n    url: ?Url;\n    /**\n     * Total urls to process.\n     */\n    total: number;\n    /**\n     * Current progress through the total.\n     */\n    progress: number;\n\n    /**\n     * Build a progress object.\n     * @param url {Url|null} current url\n     * @param total {number} total urls to process.\n     */\n    constructor(url: ?Url = null, total: number = 0) {\n        this.url = url;\n        this.total = total;\n        this.progress = 0;\n    }\n\n    /**\n     * Display something meaning full about the progress.\n     */\n    toString(): string {\n        const message = this.url != null ? this.url.url : \"\";\n        return `${this.total} | ${this.progress} :: retrieving: ${message}`;\n    }\n\n    /**\n     * Check if there is a url for the progress.\n     */\n    hasUrl(): boolean {\n        return this.url != null;\n    }\n\n    /**\n     * Something to report in the logs.\n     */\n    toLog(): ProgressLog {\n        return {\n            total: this.total,\n            progress: this.progress,\n            url: this.url != null ? this.url.url : \"\"\n        };\n    }\n\n    /**\n     * Update the progress.\n     * @param url {Url} that was just processed.\n     */\n    update(url: ?Url) {\n        this.url = url;\n        this.progress++;\n    }\n}\n"],"file":"Progress.js"}