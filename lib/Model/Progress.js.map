{"version":3,"sources":["../../src/Model/Progress.js"],"names":["Progress","constructor","url","total","progress","toString","message","hasUrl","toLog","update"],"mappings":";;;;;;;AACA;;;;AAQA;;;AAGe,MAAMA,QAAN,CAAe;AAC5B;;;;AAIA;;;;AAIA;;;;AAIA;;;;;AAKAC,EAAAA,WAAW,GAAsC;AAAA,QAArCC,GAAqC,uEAAzB,IAAyB;AAAA,QAAnBC,KAAmB,uEAAH,CAAG;AAC/C,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACD;AAED;;;;;AAGAC,EAAAA,QAAQ,GAAW;AACjB,QAAMC,OAAO,GAAG,KAAKJ,GAAL,IAAY,IAAZ,GAAmB,KAAKA,GAAL,CAASA,GAA5B,GAAkC,EAAlD;AACA,qBAAU,KAAKC,KAAf,gBAA0B,KAAKC,QAA/B,6BAA0DE,OAA1D;AACD;AAED;;;;;AAGAC,EAAAA,MAAM,GAAY;AAChB,WAAO,KAAKL,GAAL,IAAY,IAAnB;AACD;AAED;;;;;AAGAM,EAAAA,KAAK,GAAgB;AACnB,WAAO;AACLL,MAAAA,KAAK,EAAE,KAAKA,KADP;AAELC,MAAAA,QAAQ,EAAE,KAAKA,QAFV;AAGLF,MAAAA,GAAG,EAAE,KAAKA,GAAL,IAAY,IAAZ,GAAmB,KAAKA,GAAL,CAASA,GAA5B,GAAkC;AAHlC,KAAP;AAKD;AAED;;;;;;AAIAO,EAAAA,MAAM,CAACP,GAAD,EAAY;AAChB,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKE,QAAL;AACD;;AAzD2B","sourcesContent":["// @flow\nimport Url from \"./Url\";\n\ntype ProgressLog = {\n  total: number,\n  progress: number,\n  url: string\n};\n\n/**\n * Class for reporting the progress.\n */\nexport default class Progress {\n  /**\n   * Current url\n   */\n  url: ?Url;\n  /**\n   * Total urls to process.\n   */\n  total: number;\n  /**\n   * Current progress through the total.\n   */\n  progress: number;\n  /**\n   * Build a progress object.\n   * @param url {Url|null} current url\n   * @param total {number} total urls to process.\n   */\n  constructor(url: ?Url = null, total: number = 0) {\n    this.url = url;\n    this.total = total;\n    this.progress = 0;\n  }\n\n  /**\n   * Display something meaning full about the progress.\n   */\n  toString(): string {\n    const message = this.url != null ? this.url.url : \"\";\n    return `${this.total} | ${this.progress} :: retrieving: ${message}`;\n  }\n\n  /**\n   * Check if there is a url for the progress.\n   */\n  hasUrl(): boolean {\n    return this.url != null;\n  }\n\n  /**\n   * Something to report in the logs.\n   */\n  toLog(): ProgressLog {\n    return {\n      total: this.total,\n      progress: this.progress,\n      url: this.url != null ? this.url.url : \"\"\n    };\n  }\n\n  /**\n   * Update the progress.\n   * @param url {Url} that was just processed.\n   */\n  update(url: ?Url) {\n    this.url = url;\n    this.progress++;\n  }\n}\n"],"file":"Progress.js"}