{"version":3,"sources":["../../src/Model/Args.js"],"names":["Args","constructor","params","verbose","Object","assign","shouldShowHelp","hasOwnProperty","domain","output","getSiteName","replace","getProjectPath","siteName","projectPath","filename"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAEA;;;AAGA,MAAMA,IAAN,CAAW;AACT;;;;AAIA;;;;AAIA;;;AAIAC,EAAAA,WAAW,CAACC,MAAD,EAAc;AACvB,SAAKC,OAAL,GAAe,IAAf;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBH,MAApB;AACD;AAED;;;;;AAGAI,EAAAA,cAAc,GAAY;AACxB,WACE,KAAKC,cAAL,CAAoB,MAApB,KACC,KAAKC,MAAL,IAAe,IAAf,IAAuB,KAAKC,MAAL,IAAe,IAFzC;AAID;AAED;;;;;AAGAC,EAAAA,WAAW,GAAW;AACpB,WAAO,KAAKF,MAAL,CAAYG,OAAZ,CAAoB,MAApB,EAA4B,GAA5B,CAAP;AACD;AAED;;;;;AAGAC,EAAAA,cAAc,GAAW;AACvB,QAAIC,QAAQ,GAAG,KAAKH,WAAL,EAAf;AACA,QAAII,WAAW,GAAG,gBAAK,KAAKL,MAAL,CAAYM,QAAjB,EAA2BF,QAA3B,CAAlB;;AACA,QAAI,CAAC,oBAAWC,WAAX,CAAL,EAA8B;AAC5B,yBAAUA,WAAV;AACD;;AACD,WAAOA,WAAP;AACD;;AA7CQ;;eAgDId,I","sourcesContent":["// @flow\nimport FileDetails from \"./FileDetails\";\nimport { join } from \"path\";\nimport { existsSync, mkdirSync } from \"fs\";\n\n/**\n * Command-line arguments being passed to the app.\n */\nclass Args {\n  /**\n   * Project directory to output the results.\n   */\n  output: FileDetails;\n  /**\n   * Domain being indexed.\n   */\n  domain: string;\n  /**\n   * Should progress information be output to the console?\n   */\n  verbose: boolean;\n  constructor(params: any) {\n    this.verbose = true;\n    Object.assign(this, params);\n  }\n\n  /**\n   * If the mandatory options are not passed then show the menu.\n   */\n  shouldShowHelp(): boolean {\n    return (\n      this.hasOwnProperty(\"help\") ||\n      (this.domain == null || this.output == null)\n    );\n  }\n\n  /**\n   * Get the site name from the domain.\n   */\n  getSiteName(): string {\n    return this.domain.replace(/[.]/g, \"_\");\n  }\n\n  /**\n   * Get the project folder which the output + the site name. Also, it will be created if it doesn't exist.\n   */\n  getProjectPath(): string {\n    let siteName = this.getSiteName();\n    let projectPath = join(this.output.filename, siteName);\n    if (!existsSync(projectPath)) {\n      mkdirSync(projectPath);\n    }\n    return projectPath;\n  }\n}\n\nexport default Args;\n"],"file":"Args.js"}