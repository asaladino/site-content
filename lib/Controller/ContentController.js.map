{"version":3,"sources":["../../src/Controller/ContentController.js"],"names":["ContentController","constructor","args","logger","Logger","start","callback","event","progress","Promise","resolve","reject","output","doesFolderExist","contentService","ContentService","on","report","toLog","verbose","hasUrl","console","log","toString"],"mappings":";;;;;;;AACA;;AAEA;;AACA;;AACA;;;;AAEe,MAAMA,iBAAN,CAAwB;AAInCC,EAAAA,WAAW,CAACC,IAAD,EAAa;AACpB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAc,IAAIC,eAAJ,CAAWF,IAAX,CAAd;AACH;;AAEDG,EAAAA,KAAK,GAAwE;AAAA,QAAvEC,QAAuE,uEAAlD,CAACC,KAAD,EAAQC,QAAR,KAA+B,CAAE,CAAiB;AACzE,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,WAAKT,IAAL,CAAUU,MAAV,CAAiBC,eAAjB;AACA,UAAIC,cAAc,GAAG,IAAIC,uBAAJ,CAAmB,KAAKb,IAAxB,CAArB;AACAY,MAAAA,cAAc,CACTE,EADL,CACQ,OADR,EACkBR,QAAD,IAAwB;AACjCF,QAAAA,QAAQ,CAAC,OAAD,EAAUE,QAAV,CAAR;AACA,aAAKL,MAAL,CAAYc,MAAZ,CAAmBT,QAAQ,CAACU,KAAT,EAAnB;;AACA,YAAI,KAAKhB,IAAL,CAAUiB,OAAV,IAAqBX,QAAQ,CAACY,MAAT,EAAzB,EAA4C;AACxCC,UAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,CAACe,QAAT,EAAZ;AACH;AACJ,OAPL,EAQKP,EARL,CAQQ,UARR,EAQqBR,QAAD,IAAwB;AACpCF,QAAAA,QAAQ,CAAC,UAAD,EAAaE,QAAb,CAAR;AACA,aAAKL,MAAL,CAAYc,MAAZ,CAAmBT,QAAQ,CAACU,KAAT,EAAnB;;AACA,YAAI,KAAKhB,IAAL,CAAUiB,OAAV,IAAqBX,QAAQ,CAACY,MAAT,EAAzB,EAA4C;AACxCC,UAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,CAACe,QAAT,EAAZ;AACH;AACJ,OAdL,EAeKP,EAfL,CAeQ,UAfR,EAeqBR,QAAD,IAAwB;AACpCF,QAAAA,QAAQ,CAAC,UAAD,EAAaE,QAAb,CAAR;AACA,aAAKL,MAAL,CAAYc,MAAZ,CAAmBT,QAAQ,CAACU,KAAT,EAAnB;;AACA,YAAI,KAAKhB,IAAL,CAAUiB,OAAV,IAAqBX,QAAQ,CAACY,MAAT,EAAzB,EAA4C;AACxCC,UAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,CAACe,QAAT,EAAZ;AACH;;AACDb,QAAAA,OAAO;AACV,OAtBL;AAuBAI,MAAAA,cAAc,CAACT,KAAf;AACH,KA3BM,CAAP;AA4BH;;AAtCkC","sourcesContent":["// @flow\nimport ContentService from \"../Service/ContentService\";\n\nimport Logger from \"../Utility/Logger\";\nimport Progress from \"../Model/Progress\";\nimport Args from \"../Model/Args\";\n\nexport default class ContentController {\n    args: Args;\n    logger: Logger;\n\n    constructor(args: Args) {\n        this.args = args;\n        this.logger = new Logger(args);\n    }\n\n    start(callback: function = (event, progress: Progress) => {}): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.args.output.doesFolderExist();\n            let contentService = new ContentService(this.args);\n            contentService\n                .on(\"start\", (progress: Progress) => {\n                    callback('start', progress);\n                    this.logger.report(progress.toLog());\n                    if (this.args.verbose && progress.hasUrl()) {\n                        console.log(progress.toString());\n                    }\n                })\n                .on(\"progress\", (progress: Progress) => {\n                    callback('progress', progress);\n                    this.logger.report(progress.toLog());\n                    if (this.args.verbose && progress.hasUrl()) {\n                        console.log(progress.toString());\n                    }\n                })\n                .on(\"complete\", (progress: Progress) => {\n                    callback('complete', progress);\n                    this.logger.report(progress.toLog());\n                    if (this.args.verbose && progress.hasUrl()) {\n                        console.log(progress.toString());\n                    }\n                    resolve();\n                });\n            contentService.start();\n        });\n    }\n}"],"file":"ContentController.js"}