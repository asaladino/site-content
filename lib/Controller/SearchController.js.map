{"version":3,"sources":["../../src/Controller/SearchController.js"],"names":["SearchController","constructor","args","app","start","settingsRepository","SettingsRepository","doesFolderExist","setting","getSetting","use","get","req","res","search","web","ssl","enable","https","http","createServer","getWebParams","listen","port","console","log","updateArgs","Args","domain","query","crawlStatesRepository","SqliteCrawlStatesRepository","getProjectPath","s","page","limit","then","urls","json"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEe,MAAMA,gBAAN,CAAuB;AAElCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAW,uBAAX;AACH;;AAEDC,EAAAA,KAAK,GAAG;AACJ,QAAMC,kBAAkB,GAAG,IAAIC,2BAAJ,CAAuB,KAAKJ,IAA5B,CAA3B;AACAG,IAAAA,kBAAkB,CAACE,eAAnB;AACA,QAAMC,OAAO,GAAGH,kBAAkB,CAACI,UAAnB,EAAhB;AACA,SAAKN,GAAL,CAASO,GAAT,CAAa,oBAAb;AACA,SAAKP,GAAL,CAASQ,GAAT,CAAa,GAAb,EAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,WAAKC,MAAL,CAAYF,GAAZ,EAAiBC,GAAjB;AACH,KAFD;AAGA,KAACL,OAAO,CAACO,GAAR,CAAYC,GAAZ,CAAgBC,MAAhB,GAAyBC,cAAzB,GAAiCC,aAAlC,EAAwCC,YAAxC,CAAqDZ,OAAO,CAACa,YAAR,EAArD,EAA6E,KAAKlB,GAAlF,EACKmB,MADL,CACYd,OAAO,CAACM,MAAR,CAAeS,IAD3B,EACiC,MAAM;AAC/BC,MAAAA,OAAO,CAACC,GAAR,iEAAqEjB,OAAO,CAACM,MAAR,CAAeS,IAApF;AACH,KAHL;AAIH;;AAEDT,EAAAA,MAAM,CAACF,GAAD,EAAMC,GAAN,EAAW;AACb,QAAIa,UAAU,GAAG,IAAIC,aAAJ,CAAS,KAAKzB,IAAd,CAAjB;AACAwB,IAAAA,UAAU,CAACE,MAAX,GAAoBhB,GAAG,CAACiB,KAAJ,CAAUD,MAA9B;AACA,QAAIE,qBAAqB,GAAG,IAAIC,oCAAJ,CAAgCL,UAAU,CAACM,cAAX,EAAhC,CAA5B;AACAF,IAAAA,qBAAqB,CAAChB,MAAtB,CAA6B;AACzBA,MAAAA,MAAM,EAAEF,GAAG,CAACiB,KAAJ,CAAUI,CADO;AAEzBC,MAAAA,IAAI,EAAEtB,GAAG,CAACiB,KAAJ,CAAUK,IAFS;AAGzBC,MAAAA,KAAK,EAAEvB,GAAG,CAACiB,KAAJ,CAAUM;AAHQ,KAA7B,EAIGC,IAJH,CAIQC,IAAI,IAAI;AACZxB,MAAAA,GAAG,CAACyB,IAAJ,CAASD,IAAT;AACH,KAND;AAOH;;AAhCiC","sourcesContent":["import express from 'express';\nimport cors from 'cors';\nimport http from \"http\";\nimport https from \"https\";\nimport Args from '../Model/Args';\nimport SqliteCrawlStatesRepository from '../Repository/SqliteCrawlStatesRepository';\nimport SettingsRepository from \"../Repository/SettingsRepository\";\n\nexport default class SearchController {\n\n    constructor(args) {\n        this.args = args;\n        this.app = express();\n    }\n\n    start() {\n        const settingsRepository = new SettingsRepository(this.args);\n        settingsRepository.doesFolderExist();\n        const setting = settingsRepository.getSetting();\n        this.app.use(cors());\n        this.app.get('/', (req, res) => {\n            this.search(req, res);\n        });\n        (setting.web.ssl.enable ? https : http).createServer(setting.getWebParams(), this.app)\n            .listen(setting.search.port, () => {\n                console.log(`Starting content search webservice. Listening on port ${setting.search.port}!`);\n            });\n    }\n\n    search(req, res) {\n        let updateArgs = new Args(this.args);\n        updateArgs.domain = req.query.domain;\n        let crawlStatesRepository = new SqliteCrawlStatesRepository(updateArgs.getProjectPath());\n        crawlStatesRepository.search({\n            search: req.query.s,\n            page: req.query.page,\n            limit: req.query.limit,\n        }).then(urls => {\n            res.json(urls);\n        });\n    }\n}"],"file":"SearchController.js"}