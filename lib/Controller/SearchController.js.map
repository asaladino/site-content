{"version":3,"sources":["../../src/Controller/SearchController.js"],"names":["SearchController","constructor","args","app","port","start","use","get","req","res","search","listen","console","log","updateArgs","Args","domain","query","crawlStatesRepository","SqliteCrawlStatesRepository","getProjectPath","s","page","limit","then","urls","json"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEe,MAAMA,gBAAN,CAAuB;AAElCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAW,uBAAX;AACA,SAAKC,IAAL,GAAY,IAAZ;AACH;;AAEDC,EAAAA,KAAK,GAAG;AACJ,SAAKF,GAAL,CAASG,GAAT,CAAa,oBAAb;AACA,SAAKH,GAAL,CAASI,GAAT,CAAa,GAAb,EAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,WAAKC,MAAL,CAAYF,GAAZ,EAAiBC,GAAjB;AACH,KAFD;AAGA,SAAKN,GAAL,CAASQ,MAAT,CAAgB,KAAKP,IAArB,EAA2B,MAAM;AAC7BQ,MAAAA,OAAO,CAACC,GAAR,iEAAqE,KAAKT,IAA1E;AACH,KAFD;AAGH;;AAEDM,EAAAA,MAAM,CAACF,GAAD,EAAMC,GAAN,EAAW;AACb,QAAIK,UAAU,GAAG,IAAIC,aAAJ,CAAS,KAAKb,IAAd,CAAjB;AACAY,IAAAA,UAAU,CAACE,MAAX,GAAoBR,GAAG,CAACS,KAAJ,CAAUD,MAA9B;AACA,QAAIE,qBAAqB,GAAG,IAAIC,oCAAJ,CAAgCL,UAAU,CAACM,cAAX,EAAhC,CAA5B;AACAF,IAAAA,qBAAqB,CAACR,MAAtB,CAA6B;AACzBA,MAAAA,MAAM,EAAEF,GAAG,CAACS,KAAJ,CAAUI,CADO;AAEzBC,MAAAA,IAAI,EAAEd,GAAG,CAACS,KAAJ,CAAUK,IAFS;AAGzBC,MAAAA,KAAK,EAAEf,GAAG,CAACS,KAAJ,CAAUM;AAHQ,KAA7B,EAIGC,IAJH,CAIQC,IAAI,IAAI;AACZhB,MAAAA,GAAG,CAACiB,IAAJ,CAASD,IAAT;AACH,KAND;AAOH;;AA7BiC","sourcesContent":["import express from 'express';\nimport cors from 'cors';\nimport Args from '../Model/Args';\nimport SqliteCrawlStatesRepository from '../Repository/SqliteCrawlStatesRepository';\n\nexport default class SearchController {\n\n    constructor(args) {\n        this.args = args;\n        this.app = express();\n        this.port = 4444;\n    }\n\n    start() {\n        this.app.use(cors());\n        this.app.get('/', (req, res) => {\n            this.search(req, res);\n        });\n        this.app.listen(this.port, () => {\n            console.log(`Starting content search webservice. Listening on port ${this.port}!`);\n        })\n    }\n\n    search(req, res) {\n        let updateArgs = new Args(this.args);\n        updateArgs.domain = req.query.domain;\n        let crawlStatesRepository = new SqliteCrawlStatesRepository(updateArgs.getProjectPath());\n        crawlStatesRepository.search({\n            search: req.query.s,\n            page: req.query.page,\n            limit: req.query.limit,\n        }).then(urls => {\n            res.json(urls);\n        });\n    }\n}"],"file":"SearchController.js"}